<!DOCTYPE html>
<html lang="en">
<%- include('../partials/user/header') %>

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Account Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://checkout.razorpay.com/v1/checkout.js"></script>

    <style>
      :root {
        --primary-color: #198754;
        --secondary-color: #198754;
      }

      body {
        background-color: #f8f9fa;
      }

      .nav-pills .nav-link {
        color: #4b5563;
        border-radius: 8px;
        margin-bottom: 8px;
        transition: all 0.3s ease;
      }

      .nav-pills .nav-link:hover {
        background-color: #e5e7eb;
      }

      .nav-pills .nav-link.active {
        background-color: var(--primary-color);
        color: white;
      }

      .card {
        border: none;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
        border-radius: 12px;
      }

      .card-header {
        background-color: white;
        border-bottom: 1px solid #e5e7eb;
        border-radius: 12px 12px 0 0 !important;
      }

      .btn-primary {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
      }

      .btn-primary:hover {
        background-color: var(--secondary-color);
        border-color: var(--secondary-color);
      }

      .table {
        vertical-align: middle;
      }

      .breadcrumb {
        background-color: white;
        padding: 1rem;
        border-radius: 8px;
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.05);
      }

      .nav-link i {
        width: 20px;
      }

      .address-card {
        height: 100%;
        transition: transform 0.2s;
      }

      .address-card:hover {
        transform: translateY(-2px);
      }

      @media (max-width: 991.98px) {
        .nav-pills {
          display: flex;
          flex-wrap: nowrap;
          overflow-x: auto;
          padding-bottom: 1rem;
        }

        .nav-pills .nav-link {
          white-space: nowrap;
        }
      }
    </style>
  </head>

  <body>

    <main class="container py-5">
      <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb mb-0" style="color: #198754">
          <li class="breadcrumb-item"><a href="/" class="text-decoration-none">Home</a></li>
          <li class="breadcrumb-item">Pages</li>
          <li class="breadcrumb-item active" aria-current="page">Account</li>
        </ol>
      </nav>

      <div class="row g-4">
        <div class="col-lg-3">
          <div class="nav flex-column nav-pills sticky-lg-top" id="v-pills-tab" role="tablist"
            aria-orientation="vertical">
            <button class="nav-link active d-flex align-items-center" id="dashboard-tab" data-bs-toggle="pill"
              data-bs-target="#dashboard" type="button" role="tab">
              <i class="bi bi-gear me-2"></i>Dashboard
            </button>
            <button class="nav-link d-flex align-items-center" id="orders-tab" data-bs-toggle="pill"
              data-bs-target="#orders" type="button" role="tab">
              <i class="bi bi-bag me-2"></i>Orders
            </button>
            <button class="nav-link d-flex align-items-center" id="track-orders-tab" data-bs-toggle="pill"
              data-bs-target="#track-orders" type="button" role="tab">
              <i class="bi bi-truck me-2"></i>Track Order
            </button>
            <button class="nav-link d-flex align-items-center" id="address-tab" data-bs-toggle="pill"
              data-bs-target="#address" type="button" role="tab">
              <i class="bi bi-geo-alt me-2"></i>My Address
            </button>
            <button class="nav-link d-flex align-items-center" id="account-detail-tab" data-bs-toggle="pill"
              data-bs-target="#account-detail" type="button" role="tab">
              <i class="bi bi-person me-2"></i>Account Details
            </button>
            <a class="nav-link d-flex align-items-center text-danger" href="/logout">
              <i class="bi bi-box-arrow-right me-2"></i>Logout
            </a>
          </div>
        </div>

        <div class="col-lg-9">
          <div class="tab-content" id="v-pills-tabContent">
            <!-- Dashboard Tab -->
            <div class="tab-pane fade show active" id="dashboard" role="tabpanel">
              <div class="card">
                <div class="card-header py-3">
                  <h5 class="card-title mb-0">Welcome back, <%= user.username %>!</h5>
                </div>
                <div class="card-body">
                  <p class="card-text">From your account dashboard, you can:</p>
                  <div class="row g-4 mt-2">
                    <div class="col-md-4">
                      <div class="d-flex align-items-center">
                        <i class="bi bi-bag h1 me-3 text-primary"></i>
                        <div>
                          <h6 class="mb-1">View Orders</h6>
                          <a href="#" class="text-decoration-none" data-bs-toggle="pill" data-bs-target="#orders">Check
                            recent orders</a>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-4">
                      <div class="d-flex align-items-center">
                        <i class="bi bi-geo-alt h1 me-3 text-primary"></i>
                        <div>
                          <h6 class="mb-1">Addresses</h6>
                          <a href="#" class="text-decoration-none" data-bs-toggle="pill"
                            data-bs-target="#address">Manage
                            addresses</a>
                        </div>
                      </div>
                    </div>
                    <div class="col-md-4">
                      <div class="d-flex align-items-center">
                        <i class="bi bi-person h1 me-3 text-primary"></i>
                        <div>
                          <h6 class="mb-1">Account Details</h6>
                          <a href="#" class="text-decoration-none" data-bs-toggle="pill"
                            data-bs-target="#account-detail">Edit profile</a>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <!-- Orders Tab -->
            <div class="tab-pane fade" id="orders" role="tabpanel">
              <div class="card">
                <div class="card-header py-3">
                  <h5 class="card-title mb-0">Your Orders</h5>
                </div>
                <div class="card-body">
                  <div class="table-responsive">
                    <table class="table align-middle">
                      <thead class="table-light">
                        <tr>
                          <th>Order ID</th>
                          <th>Date</th>
                          <th>Status</th>
                          <th>Total</th>
                          <th>Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% if (orders && orders.length> 0) { %>
                          <% orders.forEach(order=> { %>
                            <tr>
                              <td>#<%= order.orderId %>
                              </td>
                              <td>
                                <%= new Date(order.createdOn).toLocaleDateString() %>
                              </td>
                              <td>
                                <span class="badge bg-<%= 
                                                                order.status === 'Delivered' ? 'success' : 
                                                                order.status === 'Cancelled' ? 'danger' : 
                                                                'primary' 
                                                            %>">
                                  <%= order.status %>
                                </span>
                              </td>
                              <td>â‚¹<%= order.finalAmount %> for <%= order.orderedItems.length %> item(s)</td>
                              <td>
                                <div class="btn-group">
                                  <a href="/order-details?id=<%= order._id %>"
                                    class="btn btn-sm btn-outline-primary">View</a>
                                  <% if (order.status !=="Cancelled" && order.status !=="Delivered" ) { %>
                                    <button class="btn btn-sm btn-outline-danger"
                                      onclick="confirmCancelation('<%= order._id %>', '<%= order.paymentMethod %>')">Cancel</button>
                                    <% } %>
                                      <% if (order.status && order.status.toLowerCase()==="delivered" ) { %>
                                        <button class="btn btn-sm btn-outline-warning"
                                          onclick="confirmReturn('<%= order._id %>')">Return</button>
                                        <% } %>
                                          <% if(order.status !=="Cancelled" && order.paymentStatus=="Pending" ||
                                            order.paymentStatus=="Failed" && order.paymentMethod=="Online" ){ %>
                                            <button class="btn btn-sm btn-outline-warning"
                                              onclick="confirmPayment('<%= order._id %>', '<%= order.paymentMethod %>')">Pay
                                              Now</button>
                                            <% } %>
                                </div>
                              </td>
                            </tr>
                            <% }); %>
                              <% } else { %>
                                <tr>
                                  <td colspan="5" class="text-center py-4">
                                    <i class="bi bi-bag-x h1 text-muted"></i>
                                    <p class="mt-2 mb-0">No orders found</p>
                                  </td>
                                </tr>
                                <% } %>
                      </tbody>
                    </table>
                  </div>
                </div>
              </div>
            </div>
            <!-- Address Tab -->
            <div class="tab-pane fade" id="address" role="tabpanel">
              <div class="d-flex justify-content-between align-items-center mb-4">
                <h5 class="mb-0">My Addresses</h5>
                <a href="/add-address" class="btn btn-primary">
                  <i class="bi bi-plus-lg me-2"></i>Add New Address
                </a>
              </div>
              <div class="row g-4">
                <% if (addresses && addresses.length> 0) { %>
                  <% addresses.forEach(address=> { %>
                    <div class="col-md-6">
                      <div class="card h-100 address-card">
                        <div class="card-header py-3 d-flex justify-content-between align-items-center">
                          <h6 class="mb-0">
                            <%= address.type %>
                          </h6>
                          <span class="badge bg-primary">
                            <%= address.addressType %>
                          </span>
                        </div>
                        <div class="card-body">
                          <h6 class="mb-1">
                            <%= address.name %>
                          </h6>
                          <p class="text-muted mb-2">
                            <%= address.landMark %><br>
                              <%= address.city %>, <%= address.state %>
                                  <%= address.pincode %>
                          </p>
                          <div class="mb-3">
                            <small class="text-muted">
                              <i class="bi bi-telephone me-2"></i>
                              <%= address.phone %>
                                <% if (address.altPhone) { %>
                                  <br>
                                  <i class="bi bi-telephone me-2"></i>
                                  <%= address.altPhone %>
                                    <% } %>
                            </small>
                          </div>
                          <div class="btn-group w-100">
                            <a href="/edit-address/?id=<%= address._id %>" class="btn btn-outline-primary">Edit</a>
                            <a href="/delete-address/?id=<%= address._id %>" class="btn btn-outline-danger">Delete</a>
                          </div>
                        </div>
                      </div>
                    </div>
                    <% }) %>
                      <% } else { %>
                        <div class="col-12">
                          <div class="card">
                            <div class="card-body text-center py-5">
                              <i class="bi bi-geo-alt h1 text-muted"></i>
                              <h6 class="mt-3">No Addresses Found</h6>
                              <p class="text-muted mb-3">Add your first address to make checkout easier</p>
                              <a href="/add-address" class="btn btn-primary">
                                <i class="bi bi-plus-lg me-2"></i>Add New Address
                              </a>
                            </div>
                          </div>
                        </div>
                        <% } %>
              </div>
            </div>

            <!-- Account Details Tab -->
            <div class="tab-pane fade" id="account-detail" role="tabpanel">
              <div class="card">
                <div class="card-header py-3">
                  <h5 class="card-title mb-0">Account Details</h5>
                </div>
                <div class="card-body">
                  <% if (successmessage) { %>
                    <div class="alert alert-success d-flex align-items-center" role="alert">
                      <i class="bi bi-check-circle-fill me-2"></i>
                      <div>
                        <%= successmessage %>
                      </div>
                    </div>
                    <% } %>

                      <form id="userProfileForm" onsubmit="return validateForm(event);" method="post"
                        action="/userprofile?id=<%= user._id %>" class="needs-validation">
                        <div class="row g-3">
                          <div class="col-md-12">
                            <label for="name" class="form-label">Full Name <span class="text-danger">*</span></label>
                            <div class="input-group">
                              <span class="input-group-text"><i class="bi bi-person"></i></span>
                              <input type="text" class="form-control" id="name" name="name" value="<%= user.username %>"
                                required>
                            </div>
                            <div id="nameError" class="form-text text-danger"></div>
                          </div>

                          <div class="col-md-6">
                            <label for="email" class="form-label">Email Address <span
                                class="text-danger">*</span></label>
                            <div class="input-group">
                              <span class="input-group-text"><i class="bi bi-envelope"></i></span>
                              <input type="email" class="form-control" id="email" name="email" value="<%= user.email %>"
                                readonly required>
                            </div>
                            <div id="emailError" class="form-text text-danger"></div>
                          </div>

                          <div class="col-md-6">
                            <label for="phone" class="form-label">Phone Number <span
                                class="text-danger">*</span></label>
                            <div class="input-group">
                              <span class="input-group-text"><i class="bi bi-telephone"></i></span>
                              <input type="tel" class="form-control" id="phone" name="phone" value="<%= user.phone %>"
                                required>
                            </div>
                            <div id="phoneError" class="form-text text-danger"></div>
                          </div>

                          <div class="col-12">
                            <button type="submit" class="btn btn-primary" name="submitbutton">
                              <i class="bi bi-check-lg me-2"></i>Save Changes
                            </button>
                          </div>
                        </div>
                      </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
    <%- include('../partials/user/footer') %>
      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
      <script>
        function confirmCancelation(orderId, paymentMethod) {
          if (paymentMethod === 'Online') {
            Swal.fire({
              title: 'Cancel Order?',
              text: "The amount will be credited to your wallet upon cancellation.",
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#2563eb',
              cancelButtonColor: '#dc2626',
              confirmButtonText: 'Yes, cancel it!',
              cancelButtonText: 'No, keep it',
              heightAuto: false
            }).then((result) => {
              if (result.isConfirmed) {
                window.location.href = `/order-cancel?id=${orderId}`;
              }
            });
          } else {
            Swal.fire({
              title: 'Order Canceled',
              text: "Your order has been successfully canceled.",
              icon: 'success',
              confirmButtonColor: '#2563eb',
              heightAuto: false
            }).then(() => {
              window.location.href = `/order-cancel?id=${orderId}`;
            });
          }
        }

        async function confirmPayment(orderId) {
          try {
            const res = await fetch(`/retry-payment?id=${orderId}`);
            if (!res.ok) {
              throw new Error("Failed to fetch order details");
            }

            const { razorpay, orderDetails } = await res.json();

            if (!orderDetails || !Array.isArray(orderDetails.orderedItems)) {
              throw new Error("Invalid order details received");
            }

            const orderedItemsHTML = orderDetails.orderedItems
              .map(item => `
        <p>
          <strong>Product:</strong> ${item.product.productName}<br>
          <strong>Quantity:</strong> ${item.quantity}<br>
          <strong>Price:</strong> â‚¹${item.price}
        </p>
      `).join("");

            const orderInfo = `
      <p><strong>Order ID:</strong> ${orderDetails.orderId}</p>
      <p><strong>Total Price:</strong> â‚¹${orderDetails.totalPrice}</p>
       <p><strong>Discount:</strong> â‚¹${orderDetails.discount}</p>
      <p><strong>Final Amount:</strong> â‚¹${orderDetails.finalAmount}</p>
      <p><strong>Status:</strong> ${orderDetails.status}</p>
      <p><strong>Payment Status:</strong> ${orderDetails.paymentStatus}</p>
      <p><strong>Payment Method:</strong> ${orderDetails.paymentMethod}</p>
      <h4>Ordered Items:</h4>
      ${orderedItemsHTML}
    `;

            // Show order details with SweetAlert
            const result = await Swal.fire({
              title: "Order Details",
              html: orderInfo,
              icon: "info",
              showCancelButton: true,
              confirmButtonColor: '#2563eb',
              cancelButtonColor: '#dc2626',
              cancelButtonText: 'Cancel',
              confirmButtonText: 'Pay Now',
              heightAuto: false
            });

            // Proceed to payment if confirmed
            if (result.isConfirmed) {
              const options = {
                key: 'rzp_test_7ar9vLGVnICf6E',
                amount: razorpay.amount,
                currency: razorpay.currency,
                order_id: razorpay.razorpayOrderId,
                handler: async function (paymentResponse) {
                  const updateRes = await fetch('/update-order', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({
                      orderId: orderDetails.orderId,
                      paymentId: paymentResponse.razorpay_payment_id,
                      razorpayOrderId: paymentResponse.razorpay_order_id,
                      signature: paymentResponse.razorpay_signature,
                      status: 'paid'
                    })
                  });

                  if (updateRes.ok) {
                    Swal.fire("Success", "Payment completed successfully.", "success").then(() => {
                      window.location.reload();
                    });
                  } else {
                    Swal.fire("Error", "Payment succeeded, but order update failed. Contact support.", "error");
                  }
                },
                theme: { color: '#39b4ac' }
              };

              const rzp = new Razorpay(options);

              rzp.on('payment.failed', function () {
                Swal.fire({
                  icon: 'error',
                  title: 'Payment Failed',
                  text: 'The payment process failed. Please try again.',
                  confirmButtonColor: '#39b4ac'
                });
              });

              rzp.open();
            }
          } catch (error) {
            console.error("Error in retry payment:", error);
            Swal.fire({
              icon: 'error',
              title: 'Error',
              text: error.message || 'An error occurred while processing the payment.',
              confirmButtonColor: '#39b4ac'
            });
          }
        }

        async function confirmReturn(orderId) {
          try {
            const result = await Swal.fire({
              title: "Return Order?",
              icon: "warning",
              text: "Reason for Returning Product",
              html: `<textarea id="returnReason" class="swal2-textarea" placeholder="Enter your reason here"></textarea>`,
              showCancelButton: true,
              confirmButtonText: 'Submit',
              cancelButtonText: 'Cancel',
              preConfirm: () => {
                const reason = document.getElementById('returnReason').value.trim();
                if (!reason) {
                  Swal.showValidationMessage('Reason cannot be empty');
                }
                return reason;
              }
            });

            if (result.isConfirmed) {
              const reason = result.value;

              const response = await fetch('/return-request', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json', 
                },
                body: JSON.stringify({ 
                  orderId: orderId,
                  reason: reason,
                }),
              });

              const responseData = await response.json();
              if (response.ok) {
                Swal.fire('Success!', responseData.message, 'success');
              } else {
                Swal.fire('Error!', responseData.message, 'error');
              }
            }
          } catch (error) {
            console.error('Error:', error);
            Swal.fire('Error!', 'Something went wrong. Please try again.', 'error');
          }
        }


        function validateForm(event) {
          event.preventDefault();

          const errorElements = document.querySelectorAll('.form-text.text-danger');
          errorElements.forEach(el => el.innerText = '');

          const name = document.querySelector('input[name="name"]').value;
          const email = document.querySelector('input[name="email"]').value;
          const phone = document.querySelector('input[name="phone"]').value;

          let isValid = true;

          if (!name || name.length < 2) {
            document.getElementById('nameError').innerText = 'Name must be at least two characters long';
            isValid = false;
          }

          const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
          if (!email || !emailPattern.test(email)) {
            document.getElementById('emailError').innerText = 'Please enter a valid email address';
            isValid = false;
          }

          const phonePattern = /^\+?[0-9\s]{7,15}$/;
          if (!phone || !phonePattern.test(phone)) {
            document.getElementById('phoneError').innerText = 'Please enter a valid phone number';
            isValid = false;
          }

          if (isValid) {
            document.getElementById('userProfileForm').submit();
          }
        }
      </script>
  </body>

</html>